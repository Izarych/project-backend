import { Injectable} from '@nestjs/common';
import * as puppeteer from 'puppeteer';



@Injectable()
export class ParseService {
    constructor() {
    }
    // После прочтения всех комментов функции загляни в самый низ, там тоже оставил комменты
    async parse() {
        // ссылка на фильм, позже сделаем чтобы уже по списку на каждый фильм заходило и парсило, пока разбираемся с одним
        // как пример открой еще какой-нибудь фильм и сравнивай какие у них одинаковые названия классов есть
        // (каждый класс отделен пробелом, один не совпадает, другой совпадает)
        const url = 'https://www.kinopoisk.ru/film/535341/';
        // Запускаю браузер, headless: false = будет запускаться с хедерами и все будет ок
        const browser = await puppeteer.launch({
            headless: false,
            defaultViewport: null,
        });

        // Открываю новую страницу
        const page = await browser.newPage();

        // Перехожу по ссылке, жду пока фулл контент загрузится
        await page.goto(url, {
            waitUntil: 'domcontentloaded',
        });
        // Ищу все элементы через $$ на странице, у которых сначала есть класс который в [] (в [] потому что там data-test-id=,
        // а так перед классом всегда точка) и потом row__da_RK который внутри первого класса
        // потом цикл который тянет тайтл, а потом проверка что тайтл = год производства и тянем сам год
        const elements = await page.$$('[data-test-id="encyclopedic-table"] .styles_row__da_RK');
        for (const element of elements) {
            const titleEl = await element.$('.styles_title__b1HVo');
            const title = await page.evaluate((el: HTMLElement) => el.innerText.trim(), titleEl);

            if (title === 'Год производства') {
                const valueEl = await element.$('.styles_value__g6yP4');
                const value = await page.evaluate((el: HTMLElement) => el.innerText.trim(), valueEl);

                console.log(value);
                break;
            }
        }
        // Закрываем браузер в конце (пока что, потом просто будем закрывать страницу) дальше см. комменты под функцией
        await browser.close();

    }

    // Надо вытянуть всю подобную инфу типо страна, слоган и т д
    // Но миллион ифов не варик писать, нужно будет с сайта много что тянуть
    // Пока что такие варианты (придумал на сонную голову, если что придет в голову пиши в тг или если с каким-то согласен):
    // 1. Сделать через switch/case (все равно много кода, но не так плохо выглядит)
    // 2. Создать массив с тайтлами которые нужно вытянуть, потом сделать цикл по массиву и как только тайтл совпадет
    // с названием в массиве тянуть его и переходить на следующий элемент цикла (слишком много кода и будет не особо читаемо)
    // 3. Не придумывать велосипед, вытянуть все тайтлы и дернуть с каждого инфу, так то нам все равно
    // нужна инфа со всех тайтлов в "О фильме" (как по мне норм варик, надо будет попробовать)
    // Если будешь что-то менять/делать и пушить файл, коммить тогда что изменил, будем привыкать потиху
    // Пока работаем с "О фильме", как только сделаем это по красоте, остальные колонки спарсим по аналогии
    // и перейдем уже к тому, что сделаем цикл который будет на каждый фильм переходить и все парсить
    // Таймауты пока не пишем, будем писать только когда надо будет постоянно страницы менять, пока работаем с одной
    // Комменты из функции можешь удалить, я их оставил чтобы тебе проще было влиться в puppeteer
    // Эти комменты не удаляй пусть будут, будем еще добавлять сюда инфу/способы, потом удалим их



}
